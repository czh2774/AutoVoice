# Generated by Django 2.2.1 on 2019-09-09 14:07

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='bifen_mofang',
            fields=[
                ('match_id', models.CharField(max_length=180, primary_key=True, serialize=False, verbose_name='比赛ID')),
                ('name_league', models.CharField(blank=True, max_length=180, null=True, verbose_name='联赛名称')),
                ('time', models.CharField(blank=True, max_length=180, null=True, verbose_name='比赛时间')),
                ('status', models.CharField(blank=True, max_length=180, null=True, verbose_name='比赛状态')),
                ('home_name', models.CharField(blank=True, max_length=180, null=True, verbose_name='主队名称')),
                ('home_ranking', models.CharField(blank=True, max_length=180, null=True, verbose_name='主队排名')),
                ('matchHomeScore', models.CharField(blank=True, max_length=180, null=True, verbose_name='主队得分')),
                ('away_name', models.CharField(blank=True, max_length=180, null=True, verbose_name='客队名称')),
                ('away_ranking', models.CharField(blank=True, max_length=180, null=True, verbose_name='客队排名')),
                ('matchAwayScore', models.CharField(blank=True, max_length=180, null=True, verbose_name='客队得分')),
                ('add_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='保存日期')),
                ('mod_date', models.DateTimeField(auto_now=True, verbose_name='最后修改日期')),
            ],
            options={
                'verbose_name': '足球魔方比分数据',
                'verbose_name_plural': '足球魔方比分数据',
            },
        ),
        migrations.CreateModel(
            name='cookies_hiyuncai',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cookies', models.CharField(max_length=180, verbose_name='cookies')),
            ],
        ),
        migrations.CreateModel(
            name='FootballWealthPost',
            fields=[
                ('post_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='推荐ID')),
                ('user_id', models.IntegerField(blank=True, null=True, verbose_name='作者ID')),
                ('username', models.CharField(blank=True, max_length=180, null=True, verbose_name='作者名称')),
                ('content', models.TextField(blank=True, null=True, verbose_name='推荐正文')),
                ('create_time', models.CharField(blank=True, max_length=180, null=True, verbose_name='创建时间')),
                ('week_vote_number', models.IntegerField(blank=True, null=True, verbose_name='票数')),
            ],
            options={
                'verbose_name': '足球财富文章列表',
                'verbose_name_plural': '足球财富文章列表',
            },
        ),
        migrations.CreateModel(
            name='FootballWealthRecommend',
            fields=[
                ('away', models.CharField(blank=True, max_length=180, null=True, verbose_name='客队名称')),
                ('awayScore', models.CharField(blank=True, max_length=180, null=True, verbose_name='客队比分')),
                ('bd_yz_hjspl', models.CharField(blank=True, max_length=180, null=True, verbose_name='主受让赔率')),
                ('bd_yz_hjspl_checked', models.IntegerField(blank=True, null=True, verbose_name='主受让')),
                ('bd_yz_hjspl_red', models.IntegerField(blank=True, null=True, verbose_name='主受让红单')),
                ('bd_yz_hjspl_str', models.CharField(blank=True, max_length=180, null=True, verbose_name='主受让说明')),
                ('bd_yz_jspk', models.CharField(blank=True, max_length=180, null=True, verbose_name='bd_yz_jspk')),
                ('bd_yz_result', models.IntegerField(blank=True, null=True, verbose_name='比赛结果')),
                ('bd_yz_rr', models.CharField(blank=True, max_length=180, null=True, verbose_name='bd_yz_rr')),
                ('bd_yz_sr', models.CharField(blank=True, max_length=180, null=True, verbose_name='bd_yz_sr')),
                ('bd_yz_wjspl', models.CharField(blank=True, max_length=180, null=True, verbose_name='客受让赔率')),
                ('bd_yz_wjspl_checked', models.IntegerField(blank=True, null=True, verbose_name='客受让')),
                ('bd_yz_wjspl_red', models.IntegerField(blank=True, null=True, verbose_name='客受让红单')),
                ('bd_yz_wjspl_str', models.CharField(blank=True, max_length=180, null=True, verbose_name='客受让说明')),
                ('chapter_count', models.IntegerField(blank=True, null=True, verbose_name='chapter_count')),
                ('check_rr', models.CharField(blank=True, max_length=180, null=True, verbose_name='check_rr')),
                ('check_sr', models.CharField(blank=True, max_length=180, null=True, verbose_name='check_sr')),
                ('comment_id', models.IntegerField(blank=True, null=True, verbose_name='评论ID')),
                ('create_time', models.CharField(blank=True, max_length=180, null=True, verbose_name='推荐比赛时间')),
                ('dxq_desc', models.CharField(blank=True, max_length=180, null=True, verbose_name='大小球_desc')),
                ('dxq_hjspl', models.CharField(blank=True, max_length=180, null=True, verbose_name='大小球_hjspl')),
                ('dxq_hjspl_checked', models.IntegerField(blank=True, null=True, verbose_name='大小球_hjspl_checked')),
                ('dxq_hjspl_red', models.IntegerField(blank=True, null=True, verbose_name='大小球_hjspl_red')),
                ('dxq_hjspl_str', models.CharField(blank=True, max_length=180, null=True, verbose_name='大小球_hjspl_str')),
                ('dxq_is_end', models.IntegerField(blank=True, null=True, verbose_name='大小球_is_end')),
                ('dxq_jspk', models.CharField(blank=True, max_length=180, null=True, verbose_name='大小球_jspk')),
                ('dxq_result', models.IntegerField(blank=True, null=True, verbose_name='大小球_结果')),
                ('dxq_rr', models.CharField(blank=True, max_length=180, null=True, verbose_name='大小球_rr')),
                ('dxq_sr', models.CharField(blank=True, max_length=180, null=True, verbose_name='大小球_胜率')),
                ('dxq_wjspl', models.CharField(blank=True, max_length=180, null=True, verbose_name='大小球_wjspl')),
                ('dxq_wjspl_checked', models.IntegerField(blank=True, null=True, verbose_name='大小球_wjspl_checked')),
                ('dxq_wjspl_red', models.IntegerField(blank=True, null=True, verbose_name='大小球_wjspl_red')),
                ('dxq_wjspl_str', models.CharField(blank=True, max_length=180, null=True, verbose_name='大小球_wjspl_str')),
                ('game_type', models.IntegerField(blank=True, null=True, verbose_name='游戏类型')),
                ('has_dxq', models.IntegerField(blank=True, null=True, verbose_name='has_大小球')),
                ('has_op', models.IntegerField(blank=True, null=True, verbose_name='????')),
                ('has_yz', models.IntegerField(blank=True, null=True, verbose_name='has_yz')),
                ('home', models.CharField(blank=True, max_length=180, null=True, verbose_name='主队名称')),
                ('homeScore', models.CharField(blank=True, max_length=180, null=True, verbose_name='主队比分')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='推荐ID')),
                ('ID_bet007', models.CharField(blank=True, max_length=180, null=True, verbose_name='ID_bet007')),
                ('is_end', models.IntegerField(blank=True, null=True, verbose_name='比赛是否结束')),
                ('is_show', models.IntegerField(blank=True, null=True, verbose_name='是否显示')),
                ('league', models.CharField(blank=True, max_length=180, null=True, verbose_name='联赛')),
                ('letball', models.CharField(blank=True, max_length=180, null=True, verbose_name='让球')),
                ('match_id', models.CharField(blank=True, max_length=180, null=True, verbose_name='比赛场次')),
                ('match_time1', models.CharField(blank=True, max_length=180, null=True, verbose_name='比赛日期')),
                ('match_time2', models.CharField(blank=True, max_length=180, null=True, verbose_name='比赛小时')),
                ('MatchTimeStamp', models.CharField(blank=True, max_length=180, null=True, verbose_name='比赛时间')),
                ('op_is_end', models.IntegerField(blank=True, null=True, verbose_name='？？？')),
                ('post_id', models.IntegerField(blank=True, null=True, verbose_name='推荐所属文章ID')),
                ('rq_goal', models.CharField(blank=True, max_length=180, null=True, verbose_name='让球数')),
                ('rq_rq0', models.CharField(blank=True, max_length=180, null=True, verbose_name='让球负赔率')),
                ('rq_rq0_checked', models.IntegerField(blank=True, null=True, verbose_name='让球负检查')),
                ('rq_rq0_red', models.IntegerField(blank=True, null=True, verbose_name='让球负中了')),
                ('rq_rq1', models.CharField(blank=True, max_length=180, null=True, verbose_name='让球平赔率')),
                ('rq_rq1_checked', models.IntegerField(blank=True, null=True, verbose_name='让球平检查')),
                ('rq_rq1_red', models.IntegerField(blank=True, null=True, verbose_name='让球平中了')),
                ('rq_rq3', models.CharField(blank=True, max_length=180, null=True, verbose_name='让球胜赔率')),
                ('rq_rq3_checked', models.IntegerField(blank=True, null=True, verbose_name='让球胜检查')),
                ('rq_rq3_red', models.IntegerField(blank=True, null=True, verbose_name='让球胜中了')),
                ('rq_sf_result', models.IntegerField(blank=True, null=True, verbose_name='让球胜负结果')),
                ('rq_sf_rr', models.CharField(blank=True, max_length=180, null=True, verbose_name='让球胜率')),
                ('rq_sf_sr', models.CharField(blank=True, max_length=180, null=True, verbose_name='让球胜率')),
                ('rr', models.CharField(blank=True, max_length=180, null=True, verbose_name='周返还率')),
                ('sf_goal', models.CharField(blank=True, max_length=180, null=True, verbose_name='胜平负让球数')),
                ('sf_sf0', models.CharField(blank=True, max_length=180, null=True, verbose_name='胜平负负')),
                ('sf_sf0_checked', models.IntegerField(blank=True, null=True, verbose_name='胜平负负检查')),
                ('sf_sf0_red', models.IntegerField(blank=True, null=True, verbose_name='胜平负负中了')),
                ('sf_sf1', models.CharField(blank=True, max_length=180, null=True, verbose_name='胜平负平赔率')),
                ('sf_sf1_checked', models.IntegerField(blank=True, null=True, verbose_name='胜平负平检查')),
                ('sf_sf1_red', models.IntegerField(blank=True, null=True, verbose_name='胜平负平中了')),
                ('sf_sf3', models.CharField(blank=True, max_length=180, null=True, verbose_name='胜平负胜赔率')),
                ('sf_sf3_checked', models.IntegerField(blank=True, null=True, verbose_name='胜负胜检查')),
                ('sf_sf3_red', models.IntegerField(blank=True, null=True, verbose_name='胜平负胜中了')),
                ('sort', models.IntegerField(blank=True, null=True, verbose_name='分类')),
                ('spf_goal', models.CharField(blank=True, max_length=180, null=True, verbose_name='胜平负_goal')),
                ('spf_result', models.IntegerField(blank=True, null=True, verbose_name='胜平负结果')),
                ('spf_rr', models.CharField(blank=True, max_length=180, null=True, verbose_name='胜平负胜率')),
                ('spf_sf0', models.CharField(blank=True, max_length=180, null=True, verbose_name='胜平负_负')),
                ('spf_sf0_checked', models.IntegerField(blank=True, null=True, verbose_name='胜平负_负_checked')),
                ('spf_sf0_red', models.IntegerField(blank=True, null=True, verbose_name='胜平负')),
                ('spf_sf1', models.CharField(blank=True, max_length=180, null=True, verbose_name='胜平负_平')),
                ('spf_sf1_checked', models.IntegerField(blank=True, null=True, verbose_name='胜平负_平_checked')),
                ('spf_sf1_red', models.IntegerField(blank=True, null=True, verbose_name='胜平负_平_red')),
                ('spf_sf3', models.CharField(blank=True, max_length=180, null=True, verbose_name='胜平负_胜')),
                ('spf_sf3_checked', models.IntegerField(blank=True, null=True, verbose_name='胜平负_胜_checked')),
                ('spf_sf3_red', models.IntegerField(blank=True, null=True, verbose_name='胜平负_胜_red')),
                ('spf_sr', models.CharField(blank=True, max_length=180, null=True, verbose_name='胜平负_胜率')),
                ('sr', models.CharField(blank=True, max_length=180, null=True, verbose_name='胜率sr')),
                ('state', models.IntegerField(blank=True, null=True, verbose_name='推荐结果')),
                ('strand_id', models.IntegerField(blank=True, null=True, verbose_name='串ID')),
                ('user_id', models.IntegerField(blank=True, null=True, verbose_name='作者ID')),
                ('yz_desc', models.CharField(blank=True, max_length=180, null=True, verbose_name='亚盘')),
                ('yz_is_end', models.IntegerField(blank=True, null=True, verbose_name='yz_is_end')),
            ],
            options={
                'verbose_name': '足球财富推荐',
                'verbose_name_plural': '足球财富推荐',
            },
        ),
        migrations.CreateModel(
            name='FootballWealthResolution',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='推荐ID')),
                ('user_id', models.IntegerField(blank=True, null=True, verbose_name='作者ID')),
                ('username', models.CharField(blank=True, max_length=180, null=True, verbose_name='作者名称')),
                ('rr', models.CharField(blank=True, max_length=180, null=True, verbose_name='周返还率')),
                ('sr', models.CharField(blank=True, max_length=180, null=True, verbose_name='周胜率')),
                ('vote_number', models.IntegerField(blank=True, null=True, verbose_name='票数')),
                ('post_id', models.IntegerField(blank=True, null=True, verbose_name='文章ID')),
                ('content', models.TextField(blank=True, null=True, verbose_name='推荐正文')),
                ('create_time', models.CharField(blank=True, max_length=180, null=True, verbose_name='创建时间')),
                ('recommended_str', models.CharField(blank=True, max_length=180, null=True, verbose_name='推荐内容')),
            ],
            options={
                'verbose_name': '足球财富推荐解析',
                'verbose_name_plural': '足球财富推荐解析',
            },
        ),
        migrations.CreateModel(
            name='FootballWealthUser',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='作者ID')),
                ('username', models.CharField(blank=True, max_length=180, null=True, verbose_name='作者名称')),
                ('has_game', models.CharField(blank=True, max_length=180, null=True, verbose_name='？？')),
                ('is_author', models.CharField(blank=True, max_length=180, null=True, verbose_name='？？')),
                ('is_follow', models.CharField(blank=True, max_length=180, null=True, verbose_name='是否关注')),
                ('rc', models.CharField(blank=True, max_length=180, null=True, verbose_name='红')),
                ('wc', models.CharField(blank=True, max_length=180, null=True, verbose_name='走')),
                ('bc', models.CharField(blank=True, max_length=180, null=True, verbose_name='黑')),
                ('rr', models.CharField(blank=True, max_length=180, null=True, verbose_name='周返还率')),
                ('sr', models.CharField(blank=True, max_length=180, null=True, verbose_name='周胜率')),
                ('vote_number', models.IntegerField(blank=True, null=True, verbose_name='票数')),
                ('poster', models.CharField(blank=True, max_length=180, null=True, verbose_name='头像')),
                ('phone', models.CharField(blank=True, max_length=180, null=True, verbose_name='手机号')),
            ],
            options={
                'verbose_name': '足球财富排行榜',
                'verbose_name_plural': '足球财富排行榜',
                'ordering': ('vote_number',),
            },
        ),
        migrations.CreateModel(
            name='log_voice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_title', models.CharField(max_length=180, verbose_name='日志类型')),
                ('log_data', models.CharField(max_length=180, verbose_name='日志数据')),
                ('add_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='保存日期')),
                ('mod_date', models.DateTimeField(auto_now=True, verbose_name='最后修改日期')),
            ],
            options={
                'verbose_name': '唯彩会喊话器日志',
                'verbose_name_plural': '唯彩会喊话器日志',
            },
        ),
        migrations.CreateModel(
            name='note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note1', models.CharField(max_length=180, verbose_name='广告语1')),
                ('note2', models.CharField(blank=True, max_length=180, null=True, verbose_name='广告语2')),
                ('note3', models.CharField(blank=True, max_length=180, null=True, verbose_name='广告语3')),
                ('note4', models.CharField(blank=True, max_length=180, null=True, verbose_name='广告语4')),
                ('isdead', models.IntegerField(blank=True, null=True, verbose_name='已被封，默认不填')),
                ('user', models.CharField(blank=True, max_length=180, null=True, verbose_name='填写者')),
                ('add_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='保存日期')),
                ('mod_date', models.DateTimeField(auto_now=True, verbose_name='最后修改日期')),
            ],
            options={
                'verbose_name': '广告语',
                'verbose_name_plural': '广告语',
            },
        ),
        migrations.CreateModel(
            name='proxyip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(blank=True, max_length=180, null=True)),
                ('port', models.CharField(blank=True, max_length=180, null=True)),
                ('hiding', models.CharField(blank=True, max_length=180, null=True)),
                ('proxy_http_http', models.CharField(blank=True, max_length=180, null=True)),
                ('isdead', models.CharField(blank=True, max_length=180, null=True)),
                ('add_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='保存日期')),
                ('mod_date', models.DateTimeField(auto_now=True, verbose_name='最后修改日期')),
            ],
            options={
                'verbose_name': '代理IP',
                'verbose_name_plural': '代理IP',
            },
        ),
        migrations.CreateModel(
            name='rid',
            fields=[
                ('rid', models.CharField(max_length=180, primary_key=True, serialize=False, verbose_name='房间ID')),
                ('home', models.CharField(max_length=180, verbose_name='主队')),
                ('guest', models.CharField(max_length=180, verbose_name='客队')),
                ('chatCount', models.CharField(max_length=180, verbose_name='房间人数')),
                ('isdead', models.IntegerField(blank=True, null=True, verbose_name='已经结束')),
                ('add_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='保存日期')),
                ('mod_date', models.DateTimeField(auto_now=True, verbose_name='最后修改日期')),
            ],
            options={
                'verbose_name': '唯彩会直播间列表',
                'verbose_name_plural': '唯彩会直播间列表',
            },
        ),
        migrations.CreateModel(
            name='user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.IntegerField(verbose_name='手机号')),
                ('password', models.CharField(max_length=180, verbose_name='密码')),
                ('isuse', models.CharField(max_length=180)),
                ('isdead', models.IntegerField(verbose_name='是否死亡')),
                ('utk', models.CharField(max_length=180)),
                ('token', models.CharField(max_length=180)),
                ('user_id', models.CharField(max_length=180)),
                ('nutk', models.CharField(max_length=180)),
                ('add_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='保存日期')),
                ('mod_date', models.DateTimeField(auto_now=True, verbose_name='最后修改日期')),
            ],
            options={
                'verbose_name': '唯彩账号',
                'verbose_name_plural': '唯彩账号',
            },
        ),
        migrations.CreateModel(
            name='wxname',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wxname1', models.CharField(max_length=180)),
                ('wxname2', models.CharField(blank=True, max_length=180, null=True)),
                ('wxname3', models.CharField(blank=True, max_length=180, null=True)),
                ('wxname4', models.CharField(blank=True, max_length=180, null=True)),
                ('isdead', models.IntegerField(blank=True, null=True)),
                ('user', models.CharField(blank=True, max_length=180, null=True)),
                ('add_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='保存日期')),
                ('mod_date', models.DateTimeField(auto_now=True, verbose_name='最后修改日期')),
            ],
            options={
                'verbose_name': '微信',
                'verbose_name_plural': '微信',
            },
        ),
    ]
